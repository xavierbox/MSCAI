}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
circles <- function( number = 5, points = c(50,150), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1, replace = True)
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
circles <- function( number = 5, points = c(5,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1, replace = True)
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
w = data.frame("cyl"=cars$cyl, "gear"=cars$gear)
colnames(w)   <- c("cyl", "gear")
#how many cars of 4 cylinders and 6 gears ?
indices = which(  w$cyl ==4 & w$gear > 4 )
indices
w[ indices, ]
library ( stringr )
colnames( w ) <- str_to_upper( colnames(w) )
indices = is.na( w )
indices
w <- na.omit( w )
w[1:10, ]
circles <- function( number = 5, points = c(5,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1, replace = True)
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
#number = 1
#number = 1
#points = 10
#number = 1
#points = 10
#radlimits = c(1.0,3.0)
circles <- function( number = 5, points = c(5,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1, replace = True)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
circles <- function( number = 5, points = c(5,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1, replace = True)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
circles <- function( number = 5, points = c(5,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = trunc ( sample(points,1, replace = True) )
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
pts = trunc ( sample(points,1, replace = True) )
points
points = c(5,10)
points
pts = trunc ( sample(points,1, replace = True) )
pts = sample(points,1, replace = True )
points
pts = sample(points,1)
pts
sample(points,1)
sample(points,1)
sample(points,1)
sample(points,1)
circles <- function( number = 5, points = c(5,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
circles <- function( number = 5, points = c(25,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
x
y
plot(x,y)
#number = 1
circles <- function( number = 5, points = c(25,50), radlimits = c(1.0,6.0),minlimits = c(30,0), maxlimits=c(40,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
plot(x,y)
circles <- function( number = 5, points = c(25,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
coords = circles( )
x <- unlist(coords[1])
y <- unlist(coords[2])
plot(x,y)
c1 = c( 1:10)
c2 = c( 1:10)
c3 = c( 1:10)
c4 = c( 1:10)
df = data.frame("col1"=c1 , "col2" = c2, "col3" = c3, "col4" = c4 )
df
colnames(df)
#pick one row at random
i = sample( 1L:nrow( df ) )
i
#pick one row at random
i = sample( 1L:nrow( df ),1  )
i
datum= df[ i ]
datum
#pick one row at random
i <- sample( 1L:nrow( df ),1  )
datum<- df[ i ]
datum
datum
datum<- df[ i,  ]
datum
d <- double()
d
clas( d )
class( d )
df - datum
datum
vecs = list ( c(1,2,3,4), c(2,2,2,2), c(1,1,1,1) )
vecs
datum %*% vecs
datum
class (datum )
datum<- as.numeric( df[ i,  ] )
datum
class ( datum )
typeof( datum )
vecs
datum
class ( vecs )
class ( vecs[[1]])
class ( vecs[1])
ves[1]
vec[1]
Vectorize()
vecs[1]
datum %*% vecs
datum %*% vecs[1]
vecs[1] - datum
as.numeric ( vecs )
as.numeric ( vecs )
as.numeric ( vecs, )
as.numeric ( vecs[1,] )
ves
vecs
vecs[1]
as.numeric( vecs[1] )
as.numeric( unlist( vecs[1] )
w as.numeric( unlist( vecs[1] )
w <- as.numeric( unlist( vecs[1] )
w
d <= datum - as.numeric( vecs[1,]);
d <- datum - as.numeric( vecs[1,]);
vecs
vecs[1]
datum
d <- datum - as.numeric( vecs[1,]);
d <- datum - as.numeric( vecs[1]);
class ( as.numeric( vecs[1]))
class ( as.numeric( vecs[[1]))
vecs
vecs[1]
class( vecs[1]  )
unlist( ves[1] )
unlist( vecs[1] )
class ( unlist(vecs[1] ))
unlist( vecs[1] )-datum
datum - unlist( vecs[1] )
d <- datum - unlist( vecs[1] )
d
d < d*d
d <- datum - unlist( vecs[1] )
d <- d*d
d
sum(d)
d
which.min( d )
w = which.min( d )
class (w )
values = c(1.2,2.2, 33.22, 3.2 )
values
which.min( values )
values = c(1.2,2.2, 33.22, 3.2, 1.2, 1.2  )
which.min( values )
values
values
df
df[1,]
class ( df[1,]  )
class ( as.numeric( df[1,]  ))
a = as.numeric( df[1,]  ))
a
a = as.numeric( df[1,]  )
a
class ( a )
vecs[1]
b= as.numeric ( vecs[1] )
b= as.numeric( unlist( vecs[1] ))
b
a-b
d = a-b
d<- sqrt( d*d )
d
d<- sqrt( d*d )
d <- a- b
d
d <- d*d
d
d <- sum( d )
d
circles <- function( number = 5, points = c(25,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
numer = 8
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
ww = 5
coords = circles( number = ww )
ww
circles <- function( number = 5, points = c(25,50), radlimits = c(1.0,6.0),minlimits = c(0,0), maxlimits=c(50,50) ){
number = 8
#x and y coordinates
rx <- vector(mode="numeric", length=0)
ry <- vector(mode = "numeric", length = 0 )
for( n in 1:number)
{
#center of circle n
xo   <- runif( 1, minlimits[1],maxlimits[1])
yo   <- runif( 1, minlimits[2],maxlimits[2])
rad  <- runif( 1, radlimits[1],radlimits[2])
#all the points of circle n
pts = sample(points,1)
print("points in this cirle ")
print( pts )
angles <- runif(pts,-3.14,3.14 )
scale <-  runif(pts, 0.0,1.0)
x <- xo + rad * scale * cos( angles )
y <- yo + rad * scale * sin( angles )
##append to the list of coordinates
rx<- c( rx, x )
ry<- c( ry, y )
}
return( list(rx,ry) )
}
set.seed(24335434)
ww = 5
coords = circles( number = ww )
ww
ww = 35
coords = circles( number = ww )
ww
help.start()
