s1 <- 21 * 37 + 3
s2<- sqrt(2)
s3<- sqrt( 4 -(9/2) )
s4<- 1-(1/3) - (1/3) - (1/3 )
s1;s2;s3;s4
s1 <- 21 * 37 + 3
s2<- sqrt(2)
s3<- sqrt( 4 -(9/2) )
s4<- round( 1-(1/3) - (1/3) - (1/3 ), 2 )
s1;s2;s3;s4
s5 <- 10^200 - 10^150
s1;s2;s3;s4;s5
s5 <- 10^200 * 10^150
s1;s2;s3;s4;s5
result <- 21 * 37  + 2
print(result)
print( sqrt(2) )
print( sqrt(4 - (9/2)) )
result<- 10^200 * 10^150
print( result )
if (is.infinite(result)){
print("It is infinite")
}else if(is.nan(result)){
print("It is nan")
}else{
print("It is not inf and not nan")
}
x <- c( 1,2, 3)
y <- c( 2,1,-3)
print(x)
print(y)
#one way
element_mult <- x * y
dot_product  <- sum (element_mult )
print( dot_product )
#another way: using the internal product %*%
dot_product <- x %*% y
print( dot_product )
#but neither of these used the transpose. They used x and y
#as vectors. If we assume that x,y a row vectors, then we
#need to proceed differently. Lets use matrices
tx <-  t(cbind( 1,2,3  ))
ty <-  t(cbind( 2,1,-3 ))
print(tx)
print(ty)
#element-wise
element_mult = t(x) * t(y)
dot_product  <- sum (element_mult )
print( dot_product )
print( element_mult)
#error, non- conformable arguments.
tx %*% ty
dim(tx)
dim(ty)
m1 = cbind( c(1,4), c(2,5))
m2 = rbind( c(1,0), c(0,2))
m1
m2
dim(m1)
dim(m2)
#matrix product
m1 %*% m2
m2 %*% m1
#sum
result <- m1 + m2
result
m1 %*% t(m2 )
m2 %*% t(m1 )
library( graphics )
x <- as.numeric( 1:10 )
fx <- as.numeric( x*x -2*x )
x
fx
length(x)
length(fx)
#scatter plot
plot(x = x ,y = fx )
#as line
plot(x = x ,y = fx, type = 'l')
#as line and marks
plot(x = x ,y = fx, col="red", type = 'b', xlab="axis x", ylab = "y axis", main="Chart title")
#plot two lines
fx2 <- x
cl <- c("red","blue")# rainbow(5)
plot(0,0,xlim = c(0,10),ylim = c(0,100))
data = list(fx,fx2)
for( line in 1:length(data)){
lines(y = unlist( data[line] ) ,x = x, col=cl[line], type = 'b', xlab="axis x", ylab = "y axis", main="Chart title")
}
#option 1
datafile = "disastersim01.csv"
path = file.path(getwd(), datafile)
data = read.csv( datafile )
View(data)
class( data )
#option 2
data2 = read.table( datafile, header = TRUE, sep = "," )
View(data2)
class( data2 )
colnames( data2 )
#lets plot something
colors<- c("red","blue")
plot( x = data2$landX, y = data2$landY,col=colors[1+data2$state], xlab="X", ylab="y", main="state" )
library( graphics )
x <- as.numeric( 1:10 )
fx <- as.numeric( x*x -2*x )
x
fx
length(x)
length(fx)
#scatter plot
plot(x = x ,y = fx )
#as line
plot(x = x ,y = fx, type = 'l')
#as line and marks
plot(x = x ,y = fx, col="red", type = 'b', xlab="axis x", ylab = "y axis", main="Chart title")
#plot two lines
fx2 <- x
cl <- c("red","blue")# rainbow(5)
#empty plot
plot(1, xlim = c(0,10),ylim = c(0,100), t = "n")
data = list(fx,fx2)
for( line in 1:length(data)){
points(y = unlist( data[line] ) ,x = x, col=cl[line], type = 'b', xlab="axis x", ylab = "y axis", main="Chart title")
}
#option 1
datafile = "disastersim01.csv"
path = file.path(getwd(), datafile)
data = read.csv( datafile )
#option 2
data2 = read.table( datafile, header = TRUE, sep = "," )
View(data2)
class( data2 )
colnames( data2 )
#lets plot something
colors<- c("red","blue")
plot( x = data2$landX, y = data2$landY,col=colors[1+data2$state], xlab="X", ylab="y", main="state" )
#option 1
datafile = "disastersim01.csv"
path = file.path(getwd(), datafile)
data = read.csv( datafile )
View(data)
class( data )
#option 2
data2 = read.table( datafile, header = TRUE, sep = "," )
View(data2)
class( data2 )
colnames( data2 )
#lets plot something
colors<- c("red","blue")
plot( x = data2$landX, y = data2$landY,col=colors[1+data2$state], xlab="X", ylab="y", main="state" )
#option 2
data2 = read.table( datafile, header = TRUE, sep = "," )
f
#option 1
datafile = "disastersim01.csv"
path = file.path(getwd(), datafile)
data = read.csv( datafile )
View(data)
class( data )
#option 2
data2 = read.table( datafile, header = TRUE, sep = "," )
View(data2)
class( data2 )
colnames( data2 )
#lets plot something
colors<- c("red","blue")
plot( x = data2$landX, y = data2$landY,col=colors[1+data2$state], xlab="X", ylab="y", main="state" )
#option 1
datafile = "disastersim01.csv"
path = file.path(getwd(), datafile)
data = read.csv( datafile )
View(data)
class( data )
#option 2
data2 = read.table( datafile, header = TRUE, sep = "," )
class( data2 )
colnames( data2 )
#lets plot something
colors<- c("red","blue")
plot( x = data2$landX, y = data2$landY,col=colors[1+data2$state], xlab="X", ylab="y", main="state" )
